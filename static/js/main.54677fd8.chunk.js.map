{"version":3,"sources":["components/Posts.module.css","components/PostCreate.module.css","components/NavBar.module.css","components/PostInfo.module.css","components/Login.module.css","components/Posts.jsx","api/api.js","redux/PostsReducer.js","components/PostsContainer.jsx","components/PostCreate.jsx","components/PostCreateContainer.jsx","components/PostInfo.jsx","common/Preloader.jsx","components/PostInfoContainer.jsx","components/NavBar.jsx","redux/LoginReducer.js","components/Login.jsx","App.js","reportWebVitals.js","redux/redux_store.js","index.js"],"names":["module","exports","Posts","props","className","posts","main","h1","arrayPosts","reverse","instance","axios","create","api","userId","get","then","response","data","title","body","post","initialState","actions2","type","setPostsThunk","dispatch","a","PostsReducer","state","action","statecopy","push","id","length","withRouter","connect","postsTree","loginTree","isLogged","map","to","pst","alt","img","src","useEffect","history","PostCreate","useState","setTitle","setBody","pcr","mainForm","header2","blogLogo","onChange","event","target","value","textAreaTitle","rows","cols","placeholder","textArea","onClick","addPostThunk","alert","but","PostInfo","Number","error","ourElement","find","elem","inf","Preloader","compose","match","params","postId","NavBar","nav","logo","navLinks","welcome","menu","userName","setAuth","LoginReducer","loginThunk","valid","Object","values","key","username","ref1","React","createRef","lgn","loginMain","ref","current","App","exact","path","component","PostsContainer","PostInfoContainer","PostCreateContainer","Login","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54677fd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Posts_main__232JQ\",\"h1\":\"Posts_h1__Aon8c\",\"post\":\"Posts_post__395bO\",\"img\":\"Posts_img__uEFJK\",\"id\":\"Posts_id__r2k-U\",\"title\":\"Posts_title__KqLt_\",\"body\":\"Posts_body__3U6iA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PostCreate_main__38SIz\",\"title\":\"PostCreate_title__3g826\",\"descr\":\"PostCreate_descr__2ajWT\",\"blogLogo\":\"PostCreate_blogLogo__1qvcQ\",\"textArea\":\"PostCreate_textArea__1gY5-\",\"textAreaTitle\":\"PostCreate_textAreaTitle__3mcx4\",\"textareaDescr\":\"PostCreate_textareaDescr__DBhH7\",\"textareaTitle\":\"PostCreate_textareaTitle__GOe0K\",\"but\":\"PostCreate_but__1LTlv\",\"mainForm\":\"PostCreate_mainForm__zOk9d\",\"sim\":\"PostCreate_sim__1HHtC\",\"header2\":\"PostCreate_header2__1LZ7y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__2YZ70\",\"navLinks\":\"NavBar_navLinks__3w2Iu\",\"welcome\":\"NavBar_welcome__2kM1C\",\"menu\":\"NavBar_menu__tR6pC\",\"logo\":\"NavBar_logo__1JzJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PostInfo_main__2W4Fh\",\"title\":\"PostInfo_title__3dtCH\",\"body\":\"PostInfo_body__2aroe\",\"id\":\"PostInfo_id__3ahh9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginMain\":\"Login_loginMain__2P42M\"};","import posts from \"./Posts.module.css\"\r\nimport * as React from \"react\";\r\nimport {useEffect} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Posts=(props)=>{\r\n\r\n\r\n    return( <div className={posts.main}>\r\n\r\n        <h1 className={posts.h1}>Your posts:</h1>\r\n\r\n\r\n        {props.arrayPosts.reverse()}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Posts\r\n","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({});\r\n\r\nexport const api = {\r\n\r\n    getPosts(userId) {\r\n\r\n        return instance.get(\"https://jsonplaceholder.typicode.com/posts?userId=\"+userId).then((response) => {\r\n\r\n            return response.data\r\n        });\r\n    },\r\n\r\n    addPost(title, body) {\r\n        return instance.post(\"https://jsonplaceholder.typicode.com/posts\", {title, body});\r\n    },\r\n    getUsers(){\r\n        return axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response)=>{\r\n           return response.data\r\n        })\r\n    }\r\n\r\n\r\n\r\n};\r\n","\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {api} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [] ,\r\n\r\n};\r\n\r\n\r\n\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setPosts\": {\r\n            let statecopy = {...state};\r\n            statecopy.posts = [...state.posts]\r\n            statecopy.posts = action.arrayPosts\r\n            return statecopy;\r\n        }\r\n        case \"addPost\": {\r\n            let statecopy = {...state};\r\n            statecopy.posts = [...state.posts]\r\n            statecopy.posts.push({\r\n                title: action.title,\r\n                body: action.body,\r\n                id: statecopy.posts[statecopy.posts.length - 1].id + 1,\r\n            });\r\n            return statecopy;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport const actions2 = {\r\n    setPosts: (arrayPosts) => {\r\n        return {\r\n            type: \"setPosts\",\r\n            arrayPosts: arrayPosts,\r\n        }\r\n    },\r\n    addPost: (title, body) => {\r\n        return {\r\n            type: \"addPost\",\r\n            title: title,\r\n            body: body,\r\n        }\r\n    },\r\n}\r\n\r\nexport const setPostsThunk = (userId) => async (dispatch) => {\r\n\r\n    const response = await api.getPosts(userId);\r\n\r\n    dispatch(actions2.setPosts(response)); //get from api and set to REDUX\r\n}\r\nexport const addPostThunk = (title, body) => async (dispatch) => {\r\n    await api.addPost(title, body);\r\n    dispatch(actions2.addPost(title, body)); //get from api and set to REDUX\r\n}\r\n\r\n\r\nexport default PostsReducer;\r\n","import pst from \"./Posts.module.css\";\n\nimport React, {useEffect} from \"react\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\nimport {setPostsThunk} from \"../redux/PostsReducer\";\nimport {withRouter,NavLink} from \"react-router-dom\";\n\n\n\n\nconst PostsContainer = (props) => {\n\n    let arrayPosts = props.arrayPosts.map((post) => {\n\n\n        return (<NavLink to={'/Nasa/post' + post.id} >\n            <div className={pst.post}>\n                <div className={pst.title}><h3>{post.title}</h3></div>\n                <img alt={\"img\"} className={pst.img}\n                     src={\"https://cdn.iconscout.com/icon/free/png-256/post-5-100382.png\"}/>\n                <span className={pst.body}>{post.body}</span>\n                <div className={pst.id}>\n                    #{post.id}\n                </div>\n\n\n            </div>\n        </NavLink>)\n    })\n    useEffect(() => {\n        if (!props.isLogged) {props.history.push(\"/Nasa/login\")}\n    }, [props.isLogged])\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(props.userId)\n    }, [])\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(props.userId)\n    }, [props.arrayPosts.length])\n\n\n    return (<Posts isLogged={props.isLogged} arrayPosts={arrayPosts}/>)\n}\n\n\nlet stateGo = (state) => {\n    return {\n        arrayPosts: state.postsTree.posts, //posts\n        userId:state.loginTree.userId,\n        isLogged:state.loginTree.isLogged,\n    }\n};\n\nexport default withRouter(connect(stateGo,\n    {setPostsThunk})(PostsContainer));\n\n\n","import * as React from 'react'\n\nimport pcr from \"./PostCreate.module.css\"\nimport {useState} from \"react\";\n\n\nconst PostCreate = (props) => {\n    const [title, setTitle] = useState(\"\")\n    const [body, setBody] = useState(\"\")\n\n\n    const handleChangeTitle = (event) => {\n        setTitle(event.target.value);\n    }\n    const handleChangeDescr = (event) => {\n        setBody(event.target.value);\n    }\n    const handleClick = () => {\n        props.addPostThunk(title, body);\n        setTitle(\"\");\n        setBody(\"\");\n        alert(\"Posted!\")\n\n    }\n    return (\n        (<div className={pcr.main}>\n\n            <div className={pcr.mainForm}>\n                <br/>\n                <div className={pcr.header2}>Create your new intresting post!\n                    <img alt={\"logo\"} className={pcr.blogLogo}\n                         src={\"https://www.accfb.org/wp-content/uploads/2018/06/Blog-icon.png\"}/>\n                </div>\n                <div>\n                    <textarea onChange={handleChangeTitle} value={title} className={pcr.textAreaTitle} rows={1} cols={50}\n                              placeholder={\"Enter title\"}/>\n                </div>\n                <div>\n                    <textarea onChange={handleChangeDescr} value={body} className={pcr.textArea} placeholder={\"Enter Description\"}/>\n                </div>\n                <div>\n                    <button onClick={handleClick} className={pcr.but}>Post</button>\n                </div>\n\n\n            </div>\n\n\n        </div>)\n\n    )\n}\n\nexport default PostCreate\n\n","\nimport React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {addPostThunk, setPostsThunk} from \"../redux/PostsReducer\";\nimport PostCreate from \"./PostCreate\";\nimport {withRouter} from \"react-router-dom\";\n\nconst PostCreateContainer = (props) => {\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(1);\n    }, [])\n    useEffect(() => {\n        if (!props.isLogged) {props.history.push(\"/Nasa/login\")}\n    }, [props.isLogged])\n    return (<PostCreate addPostThunk={props.addPostThunk}/>)\n}\n\nlet stateGo = (state) => {\n    return {\n        arrayPosts: state.postsTree.posts,\n        isLogged:state.loginTree.isLogged,\n    }\n};\n\nexport default withRouter(connect(stateGo,{setPostsThunk,addPostThunk})(PostCreateContainer));\n\n\n","import inf from \"./PostInfo.module.css\"\r\nimport React from \"react\";\r\n\r\nconst PostInfo = (props) => {\r\n    let id = Number(props.id);\r\n    let error=\"Not found\"\r\n    let ourElement=props.arrayPosts.find((elem)=>{\r\n    return elem.id==id\r\n})\r\n    return (<div className={inf.main}>\r\n        <div className={inf.title}>{ourElement?ourElement.title:error}</div>\r\n        <div className={inf.body}>{ourElement?ourElement.body:error}</div>\r\n        <div className={inf.id}>#{ourElement?ourElement.id:error}</div>\r\n\r\n    </div>)\r\n}\r\nexport default PostInfo\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst Preloader=()=>{\r\n    return(<div>\r\n        LOADING\r\n    </div>)\r\n}\r\nexport default Preloader;","import React, {useEffect} from \"react\";\n\n\n\nimport {setPostsThunk} from \"../redux/PostsReducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport PostInfo from \"./PostInfo\";\nimport Preloader from \"../common/Preloader\";\n\n\nconst PostInfoContainer = (props) => {\n\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk()\n    }, [])\n    useEffect(() => {\n        if (!props.isLogged) {props.history.push(\"/Nasa/login\")}\n    }, [props.isLogged])\n    return (props.arrayPosts.length > 1\n        ? <PostInfo id={props.match.params.postId} arrayPosts={props.arrayPosts}/>\n        : <Preloader/>)\n}\n\n\nlet stateGo = (state) => {\n\n    return {\n        arrayPosts: state.postsTree.posts,\n        isLogged:state.loginTree.isLogged\n    }\n};\n\nexport default compose(\n    connect(stateGo, {setPostsThunk}),\n    withRouter,\n)(PostInfoContainer);\n\n\n","import * as React from 'react'\r\nimport nav from \"./NavBar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => (\r\n    <div className={nav.NavBar}>\r\n\r\n    <span className={nav.logo}>\r\n<img src={\"https://i.ibb.co/yfp2PHT/logo.png\"} className={nav.logo}/>\r\n    </span>\r\n\r\n        <div className={nav.navLinks}>\r\n           <span className={nav.welcome}>Welcome to your blog!\r\n\r\n           </span>\r\n\r\n            <nav className={nav.menu}>\r\n                <NavLink to='/Nasa/'><a>My blog</a></NavLink> {'  '}\r\n\r\n                <NavLink to='/Nasa/new'><a>Create Post</a></NavLink> {'  '}\r\n            </nav>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default NavBar\r\n","import {api} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    userName: \"\",\r\n    isLogged: false,\r\n    userId:0,\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setAuth\": {\r\n            let statecopy = {...state};\r\n            statecopy.userName = action.userName\r\n            statecopy.isLogged = true\r\n            statecopy.userId = action.userId\r\n            debugger;\r\n            return statecopy;\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n\r\n};\r\nexport const setAuth = (userName,id) => {\r\n    return {\r\n        type: \"setAuth\",\r\n        userName: userName,\r\n        userId:id,\r\n    }\r\n}\r\n\r\nexport const loginThunk = (userName) => {\r\n        let valid=false;\r\n    return (dispatch) => {\r\n        api.getUsers().then(data => {\r\n\r\n            for (let key of Object.values(data)) {\r\n\r\n                if (key.username == userName) {\r\n\r\n                    dispatch(setAuth(userName,key.id))\r\n                    valid=true;\r\n                    break;\r\n                }\r\n            }\r\n            if (valid===false) {alert(\"No such user\")}\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default LoginReducer;\r\n","import {connect} from \"react-redux\";\r\n\r\nimport {loginThunk} from \"../redux/LoginReducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport lgn from \"./Login.module.css\"\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n    let ref1=React.createRef();\r\n    useEffect(() => {\r\n        if (props.userName) {\r\n            alert(\"Hello \" + props.userName)\r\n            props.history.push(\"/Nasa/\")\r\n        }\r\n    }, [props.isLogged])\r\n\r\n    const onSubmit = () => {\r\n        props.loginThunk(ref1.current.value)\r\n    };\r\n\r\n    return (<div className={lgn.loginMain}>\r\n\r\n        <div>\r\n        <input type={\"textarea\"} ref={ref1} placeholder={\"UserName\"}/>\r\n        </div>\r\n        <div>\r\n        <input type={\"password\"} placeholder={\"simulatedPassword\"}/>\r\n        </div>\r\n        <button onClick={onSubmit}>Login</button>\r\n\r\n\r\n    </div>)\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogged: state.loginTree.isLogged,\r\n        userName: state.loginTree.userName,\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect (mapStateToProps, {loginThunk})(Login));\r\n","import './App.css';\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport PostsContainer from \"./components/PostsContainer\";\n\nimport PostCreateContainer from \"./components/PostCreateContainer\";\nimport PostInfoContainer from \"./components/PostInfoContainer\";\nimport NavBar from \"./components/NavBar\";\nimport Login from \"./components/Login\";\n\nfunction App() {\n    return (\n        <div className='app-wrapper'>\n        <NavBar/>\n            <div className={'app-wrapper-content'}>\n                <Route exact path={\"/Nasa\"} component={PostsContainer}/>\n                <Route  exact path={`/Nasa/post:postId`} component={PostInfoContainer}/>\n                <Route exact path={\"/Nasa/new\"} component={PostCreateContainer}/>\n                <Route exact path={\"/Nasa/login\"} component={Login}/>\n\n\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport PostsReducer from \"./PostsReducer\";\r\nimport LoginReducer from \"./LoginReducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    postsTree: PostsReducer,\r\n    loginTree:LoginReducer,\r\n});\r\n\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux_store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}