[{"D:\\nasa\\src\\index.js":"1","D:\\nasa\\src\\App.js":"2","D:\\nasa\\src\\reportWebVitals.js":"3","D:\\nasa\\src\\redux\\redux_store.js":"4","D:\\nasa\\src\\redux\\PostsReducer.js":"5","D:\\nasa\\src\\components\\PostsContainer.jsx":"6","D:\\nasa\\src\\components\\Posts.jsx":"7","D:\\nasa\\src\\api\\api.js":"8","D:\\nasa\\src\\components\\PostCreate.jsx":"9","D:\\nasa\\src\\components\\PostCreateContainer.jsx":"10","D:\\nasa\\src\\components\\PostInfoContainer.jsx":"11","D:\\nasa\\src\\components\\PostInfo.jsx":"12","D:\\nasa\\src\\common\\Preloader.jsx":"13","D:\\nasa\\src\\components\\NavBar.jsx":"14","D:\\nasa\\src\\redux\\LoginReducer.js":"15","D:\\nasa\\src\\components\\Login.jsx":"16"},{"size":742,"mtime":1609853571954,"results":"17","hashOfConfig":"18"},{"size":861,"mtime":1609931653554,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":404,"mtime":1609931309642,"results":"21","hashOfConfig":"18"},{"size":1592,"mtime":1610112583451,"results":"22","hashOfConfig":"18"},{"size":1550,"mtime":1610113901374,"results":"23","hashOfConfig":"18"},{"size":364,"mtime":1610113752218,"results":"24","hashOfConfig":"18"},{"size":588,"mtime":1610114561781,"results":"25","hashOfConfig":"18"},{"size":1534,"mtime":1609854158700,"results":"26","hashOfConfig":"18"},{"size":773,"mtime":1610113901380,"results":"27","hashOfConfig":"18"},{"size":924,"mtime":1610113845571,"results":"28","hashOfConfig":"18"},{"size":553,"mtime":1609856516420,"results":"29","hashOfConfig":"18"},{"size":131,"mtime":1607797442088,"results":"30","hashOfConfig":"18"},{"size":680,"mtime":1609928883968,"results":"31","hashOfConfig":"18"},{"size":1199,"mtime":1610112422399,"results":"32","hashOfConfig":"18"},{"size":1099,"mtime":1610114481245,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1in5bo7",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"36"},"D:\\nasa\\src\\index.js",[],["77","78"],"D:\\nasa\\src\\App.js",[],"D:\\nasa\\src\\reportWebVitals.js",[],"D:\\nasa\\src\\redux\\redux_store.js",[],"D:\\nasa\\src\\redux\\PostsReducer.js",["79"],"\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {api} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    posts: [] ,\r\n\r\n};\r\n\r\n\r\n\r\nconst PostsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setPosts\": {\r\n            let statecopy = {...state};\r\n            statecopy.posts = [...state.posts]\r\n            statecopy.posts = action.arrayPosts\r\n            return statecopy;\r\n        }\r\n        case \"addPost\": {\r\n            let statecopy = {...state};\r\n            statecopy.posts = [...state.posts]\r\n            statecopy.posts.push({\r\n                title: action.title,\r\n                body: action.body,\r\n                id: statecopy.posts[statecopy.posts.length - 1].id + 1,\r\n            });\r\n            return statecopy;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\nexport const actions2 = {\r\n    setPosts: (arrayPosts) => {\r\n        return {\r\n            type: \"setPosts\",\r\n            arrayPosts: arrayPosts,\r\n        }\r\n    },\r\n    addPost: (title, body) => {\r\n        return {\r\n            type: \"addPost\",\r\n            title: title,\r\n            body: body,\r\n        }\r\n    },\r\n}\r\n\r\nexport const setPostsThunk = (userId) => async (dispatch) => {\r\n\r\n    const response = await api.getPosts(userId);\r\n\r\n    dispatch(actions2.setPosts(response)); //get from api and set to REDUX\r\n}\r\nexport const addPostThunk = (title, body) => async (dispatch) => {\r\n    await api.addPost(title, body);\r\n    dispatch(actions2.addPost(title, body)); //get from api and set to REDUX\r\n}\r\n\r\n\r\nexport default PostsReducer;\r\n","D:\\nasa\\src\\components\\PostsContainer.jsx",["80","81","82"],"import pst from \"./Posts.module.css\";\n\nimport React, {useEffect} from \"react\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\nimport {setPostsThunk} from \"../redux/PostsReducer\";\nimport {withRouter,NavLink} from \"react-router-dom\";\n\n\n\n\nconst PostsContainer = (props) => {\n\n    let arrayPosts = props.arrayPosts.map((post) => {\n\n\n        return (<NavLink to={'/post' + post.id} >\n            <div className={pst.post}>\n                <div className={pst.title}><h3>{post.title}</h3></div>\n                <img alt={\"img\"} className={pst.img}\n                     src={\"https://cdn.iconscout.com/icon/free/png-256/post-5-100382.png\"}/>\n                <span className={pst.body}>{post.body}</span>\n                <div className={pst.id}>\n                    #{post.id}\n                </div>\n\n\n            </div>\n        </NavLink>)\n    })\n    useEffect(() => {\n        if (!props.isLogged) {props.history.push(\"/login\")}\n    }, [props.isLogged])\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(props.userId)\n    }, [])\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(props.userId)\n    }, [props.arrayPosts.length])\n\n\n    return (<Posts isLogged={props.isLogged} arrayPosts={arrayPosts}/>)\n}\n\n\nlet stateGo = (state) => {\n    return {\n        arrayPosts: state.postsTree.posts, //posts\n        userId:state.loginTree.userId,\n        isLogged:state.loginTree.isLogged,\n    }\n};\n\nexport default withRouter(connect(stateGo,\n    {setPostsThunk})(PostsContainer));\n\n\n","D:\\nasa\\src\\components\\Posts.jsx",["83","84"],"import posts from \"./Posts.module.css\"\r\nimport * as React from \"react\";\r\nimport {useEffect} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Posts=(props)=>{\r\n\r\n\r\n    return( <div className={posts.main}>\r\n\r\n        <h1 className={posts.h1}>Your posts:</h1>\r\n\r\n\r\n        {props.arrayPosts.reverse()}\r\n\r\n    </div>)\r\n}\r\n\r\nexport default Posts\r\n",["85","86"],"D:\\nasa\\src\\api\\api.js",[],"D:\\nasa\\src\\components\\PostCreate.jsx",[],"D:\\nasa\\src\\components\\PostCreateContainer.jsx",["87"],"\nimport React, {useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport {addPostThunk, setPostsThunk} from \"../redux/PostsReducer\";\nimport PostCreate from \"./PostCreate\";\n\nconst PostCreateContainer = (props) => {\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk(1);\n    }, [])\n\n    return (<PostCreate addPostThunk={props.addPostThunk}/>)\n}\n\nlet stateGo = (state) => {\n    return {\n        arrayPosts: state.postsTree.posts,\n    }\n};\n\nexport default connect(stateGo,{setPostsThunk,addPostThunk})(PostCreateContainer);\n\n\n","D:\\nasa\\src\\components\\PostInfoContainer.jsx",["88","89"],"import React, {useEffect} from \"react\";\n\n\n\nimport {setPostsThunk} from \"../redux/PostsReducer\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {withRouter} from \"react-router-dom\";\nimport PostInfo from \"./PostInfo\";\nimport Preloader from \"../common/Preloader\";\n\n\nconst PostInfoContainer = (props) => {\n\n    useEffect(() => {\n        if (props.arrayPosts.length < 1) props.setPostsThunk()\n    }, [])\n    useEffect(() => {\n        if (!props.isLogged) {props.history.push(\"/login\")}\n    }, [props.isLogged])\n    return (props.arrayPosts.length > 1\n        ? <PostInfo id={props.match.params.postId} arrayPosts={props.arrayPosts}/>\n        : <Preloader/>)\n}\n\n\nlet stateGo = (state) => {\n\n    return {\n        arrayPosts: state.postsTree.posts,\n        isLogged:state.loginTree.isLogged\n    }\n};\n\nexport default compose(\n    connect(stateGo, {setPostsThunk}),\n    withRouter,\n)(PostInfoContainer);\n\n\n","D:\\nasa\\src\\components\\PostInfo.jsx",["90"],"import inf from \"./PostInfo.module.css\"\r\nimport React from \"react\";\r\n\r\nconst PostInfo = (props) => {\r\n    let id = Number(props.id);\r\n    let error=\"Not found\"\r\n    let ourElement=props.arrayPosts.find((elem)=>{\r\n    return elem.id==id\r\n})\r\n    return (<div className={inf.main}>\r\n        <div className={inf.title}>{ourElement?ourElement.title:error}</div>\r\n        <div className={inf.body}>{ourElement?ourElement.body:error}</div>\r\n        <div className={inf.id}>#{ourElement?ourElement.id:error}</div>\r\n\r\n    </div>)\r\n}\r\nexport default PostInfo\r\n\r\n","D:\\nasa\\src\\common\\Preloader.jsx",[],"D:\\nasa\\src\\components\\NavBar.jsx",["91","92","93"],"import * as React from 'react'\r\nimport nav from \"./NavBar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst NavBar = () => (\r\n    <div className={nav.NavBar}>\r\n\r\n    <span className={nav.logo}>\r\n<img src={\"https://i.ibb.co/yfp2PHT/logo.png\"} className={nav.logo}/>\r\n    </span>\r\n\r\n        <div className={nav.navLinks}>\r\n           <span className={nav.welcome}>Welcome to your blog!\r\n\r\n           </span>\r\n\r\n            <nav className={nav.menu}>\r\n                <NavLink to='/posts'><a>My blog</a></NavLink> {'  '}\r\n\r\n                <NavLink to='/posts/new'><a>Create Post</a></NavLink> {'  '}\r\n            </nav>\r\n        </div>\r\n\r\n    </div>\r\n)\r\n\r\nexport default NavBar","D:\\nasa\\src\\redux\\LoginReducer.js",["94"],"import {api} from \"../api/api\";\r\n\r\n\r\nlet initialState = {\r\n    userName: \"\",\r\n    isLogged: false,\r\n    userId:0,\r\n};\r\n\r\nconst LoginReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"setAuth\": {\r\n            let statecopy = {...state};\r\n            statecopy.userName = action.userName\r\n            statecopy.isLogged = true\r\n            statecopy.userId = action.userId\r\n            debugger;\r\n            return statecopy;\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n\r\n};\r\nexport const setAuth = (userName,id) => {\r\n    return {\r\n        type: \"setAuth\",\r\n        userName: userName,\r\n        userId:id,\r\n    }\r\n}\r\n\r\nexport const loginThunk = (userName) => {\r\n        let valid=false;\r\n    return (dispatch) => {\r\n        api.getUsers().then(data => {\r\n\r\n            for (let key of Object.values(data)) {\r\n\r\n                if (key.username == userName) {\r\n\r\n                    dispatch(setAuth(userName,key.id))\r\n                    valid=true;\r\n                    break;\r\n                }\r\n            }\r\n            if (valid===false) {alert(\"No such user\")}\r\n\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default LoginReducer;\r\n","D:\\nasa\\src\\components\\Login.jsx",["95"],"import {connect} from \"react-redux\";\r\n\r\nimport {loginThunk} from \"../redux/LoginReducer\";\r\nimport React, {useEffect} from \"react\";\r\nimport lgn from \"./Login.module.css\"\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst Login = (props) => {\r\n    let ref1=React.createRef();\r\n    useEffect(() => {\r\n        if (props.userName) {\r\n            alert(\"Hello \" + props.userName)\r\n            props.history.push(\"/\")\r\n        }\r\n    }, [props.isLogged])\r\n\r\n    const onSubmit = () => {\r\n        props.loginThunk(ref1.current.value)\r\n    };\r\n\r\n    return (<div className={lgn.loginMain}>\r\n\r\n        <div>\r\n        <input type={\"textarea\"} ref={ref1} placeholder={\"UserName\"}/>\r\n        </div>\r\n        <div>\r\n        <input type={\"password\"} placeholder={\"simulatedPassword\"}/>\r\n        </div>\r\n        <button onClick={onSubmit}>Login</button>\r\n\r\n\r\n    </div>)\r\n};\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isLogged: state.loginTree.isLogged,\r\n        userName: state.loginTree.userName,\r\n    }\r\n};\r\n\r\n\r\nexport default withRouter(connect (mapStateToProps, {loginThunk})(Login));\r\n",{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":2,"column":9,"nodeType":"102","messageId":"103","endLine":2,"endColumn":20},{"ruleId":"104","severity":1,"message":"105","line":33,"column":8,"nodeType":"106","endLine":33,"endColumn":24,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":36,"column":8,"nodeType":"106","endLine":36,"endColumn":10,"suggestions":"109"},{"ruleId":"104","severity":1,"message":"108","line":39,"column":8,"nodeType":"106","endLine":39,"endColumn":33,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":4,"column":9,"nodeType":"102","messageId":"103","endLine":4,"endColumn":17},{"ruleId":"104","severity":1,"message":"105","line":16,"column":8,"nodeType":"106","endLine":16,"endColumn":24,"suggestions":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},{"ruleId":"104","severity":1,"message":"108","line":10,"column":8,"nodeType":"106","endLine":10,"endColumn":10,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"108","line":17,"column":8,"nodeType":"106","endLine":17,"endColumn":10,"suggestions":"116"},{"ruleId":"104","severity":1,"message":"105","line":20,"column":8,"nodeType":"106","endLine":20,"endColumn":24,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":8,"column":19,"nodeType":"120","messageId":"121","endLine":8,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":10,"column":1,"nodeType":"124","endLine":10,"endColumn":70},{"ruleId":"125","severity":1,"message":"126","line":19,"column":38,"nodeType":"124","endLine":19,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":21,"column":42,"nodeType":"124","endLine":21,"endColumn":45},{"ruleId":"118","severity":1,"message":"119","line":41,"column":34,"nodeType":"120","messageId":"121","endLine":41,"endColumn":36},{"ruleId":"104","severity":1,"message":"127","line":16,"column":8,"nodeType":"106","endLine":16,"endColumn":24,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'ThunkAction' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["132"],["133"],"'Redirect' is defined but never used.",["134"],["129"],["130"],["135"],["136"],["137"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'props.history' and 'props.userName'. Either include them or remove the dependency array.",["138"],"no-global-assign","no-unsafe-negation",{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"139","fix":"145"},{"desc":"141","fix":"146"},{"desc":"141","fix":"147"},{"desc":"139","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [props.history, props.isLogged]",{"range":"151","text":"152"},"Update the dependencies array to be: [props]",{"range":"153","text":"154"},"Update the dependencies array to be: [props, props.arrayPosts.length]",{"range":"155","text":"156"},{"range":"157","text":"152"},{"range":"158","text":"154"},{"range":"159","text":"154"},{"range":"160","text":"152"},"Update the dependencies array to be: [props.history, props.isLogged, props.userName]",{"range":"161","text":"162"},[948,964],"[props.history, props.isLogged]",[1070,1072],"[props]",[1178,1203],"[props, props.arrayPosts.length]",[404,420],[319,321],[423,425],[516,532],[436,452],"[props.history, props.isLogged, props.userName]"]